/* CSS Reset */
/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

body {
  /* 3. Add accessible line-height */
  line-height: 1.5;
  /* 4. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 5. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 6. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 7. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 8. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
    9. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}

/* Styles */

body {
  display: flex;
  justify-items: center;
  align-items: start;
  width: 100vw;
  height: 100vh;
  background-color: #f9f9f9;
}

#mainContainer {
  display: flex;
  flex-direction: row;
  width: 100vw;
  height: 100vh;
  background-color: black;
}

#mainContainer.blur {
  filter: blur(5px);
}

#navBar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 20vw;
  height: 100%;
  background-color: blue;
}

/* Add ToDo dialog/modal */

#addToDoDialog {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 850px;
  height: 500px;
  background-color: #e5e4e2;
  border: 0;
  border-radius: 10px;
  transition: 0.3s ease-in-out;
  opacity: 0;
  transform: scale(0);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 0;
  outline: none;
  pointer-events: none;
}

#addToDoDialog.open {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
  visibility: open;
  pointer-events: auto;
}

#addToDoDialogContent {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

#addToDoHeaderContainer {
  display: flex;
  justify-content: space-between;
  flex-direction: row;
  background-color: #73c2fb;
  width: 100%;
  padding: 15px;
}

#addToDoHeader {
  font-size: 1.75rem;
  color: #333333;
}

#addToDoForm {
  display: flex;
  flex-direction: column;
  justify-content: start;
  height: 100%;
  width: 100%;
}

#inputContainer {
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: start;
  flex: 1;
  padding: 15px;
}

#addToDoExitBtn,
.exitBtn {
  width: 50px;
  background-color: #73c2fb;
  border: none;
  outline: none;
  cursor: pointer;
}

#content {
  display: flex;
  flex-direction: column;
}

.inputBox {
  background-color: #e5e4e2;
  outline: none;
  border: none;
  height: 50px;
  width: 100%;
  resize: none;
  font-size: 1.5rem;
}

.inputBox::placeholder {
  color: #333333;
}

#titleInput {
  font-size: 1.75rem;
}

#detailsInput {
  height: 100px;
}

#dueDatePriorityContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  height: 150px;
  gap: 5px;
}

#dueDateInputContainer {
  display: flex;
  justify-content: start;
  align-items: center;
  gap: 20px;
}

#dueDateText {
  font-size: 1.5rem;
}

#dueDateInput {
  text-align: center;
  border: 3px solid black;
  border-radius: 10px;
  padding: 10px;
  width: 240px;
  height: 50px;
}

#dueDateInput::placeholder {
  font-size: 1rem;
}

#dueDateInput::-webkit-datetime-edit-text,
#dueDateInput::-webkit-datetime-edit-month-field,
#dueDateInput::-webkit-datetime-edit-day-field,
#dueDateInput::-webkit-datetime-edit-year-field {
  text-transform: uppercase;
  color: #333333;
}

#priorityContainer {
  display: flex;
  flex-direction: column;
  gap: 5px;
}

#priorityError {
  font-size: 1.5rem;
  color: red;
  font-style: italic;
  font-weight: bold;
  opacity: 0;
}

#priorityError.error {
  opacity: 100;
}

#priorityBtnContainer {
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
  width: 100%;
  gap: 25px;
}

#priorityText {
  font-size: 1.5rem;
}

#priorityInputLow,
#priorityInputMedium,
#priorityInputHigh {
  border: solid 3px;
  border-radius: 7.5px;
  width: fit-content;
  padding: 0 20px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

#priorityInputLow.clicked {
  background-color: green;
  color: white;
}

#priorityInputMedium.clicked {
  background-color: orange;
  color: white;
}

#priorityInputHigh.clicked {
  background-color: red;
  color: white;
}

#priorityInputLow {
  border: solid 3px green;
}

#priorityInputMedium {
  border: solid 3px orange;
}

#priorityInputHigh {
  border: solid 3px red;
}

#addToDoSubmitBtnContainer {
  display: flex;
  justify-content: center;
  width: 100%;
  padding-bottom: 20px;
  gap: 50px;
}

#addToDoCloseBtn,
#addToDoSubmitBtn {
  border-radius: 5px;
  height: 50px;
  width: 150px;
  font-size: 1.5rem;
  cursor: pointer;
  color: #333333;
}

#addToDoCloseBtn {
  background-color: #e5e4e2;
  border: 3px solid black;
}

#addToDoCloseBtn:hover {
  background-color: #848884;
  color: white;
}

#addToDoSubmitBtn {
  border: 3px solid black;
  background-color: #73c2fb;
}

#addToDoSubmitBtn:hover {
  background-color: #0077c0;
  color: white;
}

#toDoList {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 75vw;
  height: 100%;
  gap: 10px;
}

/* ToDo */

.toDoContainer {
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: start;
  background-color: #e5e4e2;
  width: 825px;
  height: 50px;
}

.toDoContainer:hover {
  box-shadow: -5px 5px 5px grey, 5px 5px 5px grey;

  transform: scale(1.01);
  transition: 0.3s;
}

.toDoCheckBoxContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50px;
  width: 50px;
  flex: 0 0 5%;
}

.toDoCheckBox {
  position: absolute;
}

.toDoCheckBoxSpan {
  position: absolute;
  width: 17.5px;
  height: 17.5px;
  border-radius: 5px;
  border: 3px solid green;
  background-color: white;
}

.toDoCheckBox:checked + .toDoCheckBoxSpan::after {
  content: "\2713";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -46.25%);
  font-size: 15px;
  font-weight: 900;
  color: green;
  opacity: 100;
}

.toDoTitleContainer {
  display: flex;
  justify-content: start;
  align-items: center;
  height: 100%;
  flex: 1;
}

.toDoTitle {
  font-size: 1.4rem;
}

.toDoTitle.completed {
  text-decoration: line-through;
  opacity: 60%;
}

.toDoTitle.completed,
.toDoDescriptionBtn.completed,
.toDoDate.completed,
.toDoEditBtn.completed,
.toDoDeleteBtn.completed {
  opacity: 60%;
}

.toDoInformationContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 20%;
  gap: 40px;
}

.toDoDescriptionBtnContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 15%;
  height: 100%;
}

.toDoDescriptionBtn {
}

/* Details Modal */

.descriptionModal {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 700px;
  height: 250px;
  border: 0;
  border-radius: 10px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 0;
}

.descriptionModalWrapper {
  display: flex;
  flex-direction: column;
  justify-content: start;
  align-items: start;
  background-color: #e5e4e2;
  width: 100%;
  height: 100%;
  padding: 25px;
}

.descriptionModalHeaderContainer {
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 20px;
}

.exitBtn {
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
  background-color: #e5e4e2;
}

.descriptionModalHeader {
  color: #333333;
}

.descriptionModalInformationContainer {
  display: flex;
  justify-content: start;
  flex-direction: column;
  width: 100%;
  height: 100%;
  gap: 5px;
}

.descriptionModalSubContainer {
  display: flex;
  flex-direction: row;
  width: 100%;
  gap: 10px;
}

.descriptionModalInfoContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}

.descriptionModalSubHeaderContainer,
.descriptionModalInfoContainer {
  color: #333333;
}

.descriptionModalSubHeaderContainer {
  flex: 0 0 85px;
}

.toDoDateContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 80px;
  height: 100%;
}

.toDoDate {
}

.toDoEditAndDeleteBtnContainer {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  height: 100%;
  width: 8%;
  margin-left: auto;
  gap: 20px;
  margin-right: 15px;
}

.toDoEditBtnContainer,
.toDoDeleteBtnContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

.toDoEditBtn,
.toDoDeleteBtn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 17.5px;
  height: 17.5px;
  outline: none;
  border: none;
  background-color: #e5e4e2;
}

.toDoDeleteBtn:hover {
  color: #73c2fb;
  cursor: pointer;
}

.toast {
  visibility: hidden;
  width: 250px;
  margin-left: -125px;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 2px;
  padding: 16px;
  position: fixed;
  /* z-index: 1; */
  left: 50%;
  bottom: 30px;
}

.toast.show {
  visibility: visible;
  -webkit-animation: fadein 0.5s, fadeout 0.5s 4.5s;
  animation: fadein 0.5s, fadeout 0.5s 4.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
  from {
    bottom: 0;
    opacity: 0;
  }
  to {
    bottom: 30px;
    opacity: 1;
  }
}

@keyframes fadein {
  from {
    bottom: 0;
    opacity: 0;
  }
  to {
    bottom: 30px;
    opacity: 1;
  }
}

@-webkit-keyframes fadeout {
  from {
    bottom: 30px;
    opacity: 1;
  }
  to {
    bottom: 0;
    opacity: 0;
  }
}

@keyframes fadeout {
  from {
    bottom: 30px;
    opacity: 1;
  }
  to {
    bottom: 0;
    opacity: 0;
  }
}

/* Add ToDo Btn */

.addToDoBtnContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
}

.addToDoBtn {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  border-radius: 20px;
  font-size: 2rem;
  cursor: pointer;
}
